name: E2E Full Suite (Non-blocking)

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch: {}

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        shard: ["1/4", "2/4", "3/4", "4/4"]

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: app
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/app?schema=public
      NODE_ENV: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm i -g pnpm
          pnpm i --frozen-lockfile

      - name: Prepare database
        run: |
          npx prisma migrate deploy
          if [ -f prisma/seed.ts ] || [ -f prisma/seed.js ]; then pnpm prisma db seed || true; fi

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests (Shard ${{ matrix.shard }})
        run: |
          set -o pipefail
          SAFE="${{ matrix.shard }}/"
          SAFE=${SAFE//\//_}
          npx playwright test --reporter=line --shard=${{ matrix.shard }} 2>&1 | tee "ci_e2e_${SAFE}.log"

      - name: Upload shard logs & reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-e2e-logs-${{ matrix.shard }}
          path: |
            ci_e2e_*.log
            playwright-report/**
            test-results/**
          retention-days: 5
