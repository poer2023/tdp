name: Auto Deploy

on:
  workflow_run:
    workflows: ["Docker Build and Push"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.PROJECT_DIR }}

            # Pull latest changes
            git pull origin main

            # Pull latest Docker images
            docker compose pull

            # Restart services with new images
            docker compose up -d

            # Wait for services to be ready
            echo "Waiting for services to start..."
            sleep 30

            # Check health status
            if docker compose ps | grep -q "healthy"; then
              echo "‚úÖ Deployment successful - services are healthy"
            else
              echo "‚ùå Deployment may have issues - checking service status:"
              docker compose ps
              docker compose logs --tail=50
              exit 1
            fi

            # Optional: Clean up unused images
            docker image prune -f

  notification:
    name: Deploy Notification
    runs-on: ubuntu-latest
    needs: deploy
    if: always()

    steps:
      - name: Deployment Success
        if: needs.deploy.result == 'success'
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
          echo "Commit: ${{ github.sha }}"

      - name: Deployment Failed
        if: needs.deploy.result == 'failure'
        run: |
          echo "‚ùå Deployment failed!"
          echo "Please check the deployment logs and server status."
          exit 1