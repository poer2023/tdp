# ============================================================================
# direnv 配置文件
# ============================================================================
# 用途: 进入项目目录时自动加载环境变量
#
# 前置要求:
# 1. 安装 direnv: brew install direnv
# 2. 配置 shell hook:
#    - zsh: echo 'eval "$(direnv hook zsh)"' >> ~/.zshrc
#    - bash: echo 'eval "$(direnv hook bash)"' >> ~/.bashrc
# 3. 重启终端或运行: source ~/.zshrc
#
# 首次使用:
# 1. 进入项目目录后会提示: direnv: error .envrc is blocked
# 2. 运行: direnv allow
# 3. 之后会自动加载环境变量
# ============================================================================

# 加载 .env.local (本地敏感配置,优先级最高)
if [ -f .env.local ]; then
  dotenv .env.local
fi

# 加载 .env (基础配置)
if [ -f .env ]; then
  dotenv .env
fi

# 提示使用的 Node 版本
if [ -f .nvmrc ]; then
  NODE_VERSION=$(cat .nvmrc)
  echo "📦 Using Node.js version: $NODE_VERSION"

  # 如果安装了 nvm,自动切换版本
  if command -v nvm &> /dev/null; then
    use node "$NODE_VERSION"
  fi
fi

# 验证必需的环境变量
if [ -z "$DATABASE_URL" ]; then
  echo "⚠️  警告: DATABASE_URL 未配置"
  echo "   请复制 .env.local.example 为 .env.local 并填写配置"
fi

if [ -z "$NEXTAUTH_SECRET" ]; then
  echo "⚠️  警告: NEXTAUTH_SECRET 未配置"
  echo "   生成方法: openssl rand -base64 32"
fi

# 设置项目特定的路径
export PATH="$PWD/node_modules/.bin:$PATH"

echo "✅ 环境变量已加载 (来自 .env.local 和 .env)"
