generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  AUTHOR
  READER
}

enum PostStatus {
  DRAFT
  PUBLISHED
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(AUTHOR)
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @map("refreshToken")
  access_token      String?  @map("accessToken")
  expires_at        Int?     @map("expiresAt")
  token_type        String?  @map("tokenType")
  scope             String?
  id_token          String?  @map("idToken")
  session_state     String?  @map("sessionState")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id             String      @id @default(cuid())
  title          String
  slug           String      @unique
  excerpt        String
  content        String
  coverImagePath String?
  tags           String?
  status         PostStatus  @default(DRAFT)
  publishedAt    DateTime?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  authorId       String?

  author User? @relation(fields: [authorId], references: [id])
  gallery GalleryImage[]
}

model GalleryImage {
  id          String   @id @default(cuid())
  title       String?
  description String?
  filePath    String
  postId      String?
  createdAt   DateTime @default(now())

  post Post? @relation(fields: [postId], references: [id], onDelete: SetNull)
}
